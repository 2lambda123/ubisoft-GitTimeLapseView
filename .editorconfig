# EditorConfig is awesome: http://EditorConfig.org

# /!\ You editor must support EditorConfig for this file to work /!\
# See: http://editorconfig.org/#download

# Currently all properties and values are case-insensitive. They are lowercased
# when parsed. Generally, if a property is not specified, the editor settings
# will be used, i.e. EditorConfig takes no effect on that part.
#
# It is acceptable and often preferred to leave certain EditorConfig properties
# unspecified. For example, tab_width need not be specified unless it differs
# from the value of indent_size. Also, when indent_style is set to "tab", it may
# be desirable to leave indent_size unspecified so readers may view the file
# using their preferred indentation width. Additionally, if a property is not
# standardized in your project (end_of_line for example), it may be best to
# leave it blank.
#
# For any property, a value of "unset" is to remove the effect of that property,
# even if it has been set before. For example, add "indent_size = unset" to
# undefine indent_size property (and use editor default).

# root:
#       Special property that should be specified at the top of the file outside
#       of any sections. Set to "true" to stop .editorconfig files search on
#       current file.
root = true

# indent_style:
#       Set to "tab" or "space" to use hard tabs or soft tabs respectively.
# indent_size:
#       A whole number defining the number of columns used for each indentation
#       level and the width of soft tabs (when supported). When set to "tab",
#       the value of tab_width (if specified) will be used.
# tab_width:
#       A whole number defining the number of columns used to represent a tab
#       character. This defaults to the value of indent_size and doesn't usually
#       need to be specified.
[*]
indent_style = space
indent_size = 4

[*.{md,yml,yaml}]
indent_size = 2

[Makefile]
indent_style = tab

# end_of_line:
#       Set to "lf", "cr", or "crlf" to control how line breaks are represented.
[*.{sh,bash,csh}]
end_of_line = lf

[*.{bat,cmd,ps1}]
end_of_line = crlf

# charset:
#       Set to "latin1", "utf-8", "utf-8-bom", "utf-16be" or "utf-16le" to
#       control the character set.
#       Use of "utf-8-bom" is discouraged:
#                           https://stackoverflow.com/questions/2223882/
[*.ps1]
charset=utf-8-bom

[*.{js,py,html,htm,css,xml}]
charset = utf-8

# trim_trailing_whitespace:
#       Set to "true" to remove any whitespace characters preceding newline
#       characters and "false" to ensure it doesn't.
[*]
trim_trailing_whitespace = true

[*.md]
trim_trailing_whitespace = false

# insert_final_newline:
#       Set to "true" to ensure file ends with a newline when saving and "false"
#       to ensure it doesn't.
[*]
insert_final_newline = true

# max_line_length:
#       /!\ Supported by a limited number of editors /!\
#       Forces hard line wrapping after the amount of characters specified. off
#       to turn off this feature (use the editor settings).
[.editorconfig]
max_line_length=80

[*.{csproj,props,targets}]
indent_size = 2

## Language conventions
# Dotnet code style settings:

[*.{cs,csx,cake,vb}]
# Avoid "this." and "Me." if not necessary
dotnet_style_qualification_for_event = false : warning
dotnet_style_qualification_for_field = false : warning
dotnet_style_qualification_for_method = false : warning
dotnet_style_qualification_for_property = false : warning

# Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true : warning
dotnet_style_predefined_type_for_member_access = true : warning

# Expression-level preferences
dotnet_style_coalesce_expression = true : suggestion
dotnet_style_collection_initializer = true : suggestion
dotnet_style_explicit_tuple_names = true : warning
dotnet_style_null_propagation = true : suggestion
dotnet_style_object_initializer = true : suggestion
dotnet_style_require_accessibility_modifiers = always : warning

dotnet_style_prefer_is_null_check_over_reference_equality_method = true : warning
dotnet_style_readonly_field = true : warning
dotnet_style_prefer_auto_properties = true : suggestion
dotnet_style_prefer_inferred_tuple_names = true : suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true : suggestion

# CSharp code style settings:
[*.cs]
# Prefer "var" everywhere (Implicit and explicit types)
csharp_style_var_elsewhere = true : suggestion
csharp_style_var_for_built_in_types = true : suggestion
csharp_style_var_when_type_is_apparent = true : warning

# Expression-Bodied members
csharp_style_expression_bodied_accessors = true : suggestion
csharp_style_expression_bodied_indexers = true : suggestion
csharp_style_expression_bodied_operators = true : suggestion
csharp_style_expression_bodied_properties = true : suggestion
# Explicitly disabled due to difference in coding style between source and tests
#csharp_style_expression_bodied_constructors = true : warning
#csharp_style_expression_bodied_methods = true : warning

# Pattern matching
csharp_style_pattern_matching_over_as_with_null_check = true : suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true : suggestion

# Inlined variable declarations
csharp_style_inlined_variable_declaration = true : suggestion

# Expression-level preferences
csharp_prefer_inferred_anonymous_type_member_names = true : warning
csharp_prefer_inferred_tuple_names = true : warning
csharp_prefer_simple_default_expression = true : warning
csharp_preferred_modifier_order = public,private,protected,internal,const,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async
csharp_style_deconstructed_variable_declaration = true : warning
csharp_style_pattern_local_over_anonymous_function = true : warning

# Null-checking preference
csharp_style_conditional_delegate_call = true : warning
csharp_style_throw_expression = true : warning

# Code block preferences
csharp_prefer_braces = when_multiline : suggestion

## Formatting conventions
# Dotnet formatting settings:
[*.{cs,vb}]
# Organize usings
dotnet_sort_system_directives_first = true

# CSharp formatting settings:
[*.cs]
# Newline options
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Identation options
csharp_indent_case_contents = true
csharp_indent_labels = flush_left
csharp_indent_switch_labels = true

# Spacing options
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false

# Wrapping options
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false
dotnet_diagnostic.MA0002.severity=silent
dotnet_diagnostic.MA0046.severity=silent
dotnet_diagnostic.MA0051.severity=silent
dotnet_diagnostic.SA1629.severity=silent
dotnet_diagnostic.SA1611.severity=silent
dotnet_diagnostic.SA1615.severity=silent

## Naming conventions

# IDE0090: Use 'new(...)'
dotnet_diagnostic.IDE0090.severity = none

# IDE0063: Use simple 'using' statement
dotnet_diagnostic.IDE0063.severity = none

# IDE0056: Use index operator
dotnet_diagnostic.IDE0056.severity = none

# CA2254: Template should be a static expression
dotnet_diagnostic.CA2254.severity = none

# IDE0057: Use range operator
dotnet_diagnostic.IDE0057.severity = silent

# IDE1006: Naming Styles
dotnet_diagnostic.IDE1006.severity = silent

[*.{cs,vb}]

# Non-private static fields are PascalCase
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.symbols = non_private_static_fields
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.non_private_static_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_static_fields.applicable_accessibilities = public, protected, internal, protected internal, private protected
dotnet_naming_symbols.non_private_static_fields.required_modifiers = static

dotnet_naming_style.non_private_static_field_style.capitalization = pascal_case

# Constants are PascalCase
dotnet_naming_rule.constants_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constants_should_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_should_be_pascal_case.style = constant_style

dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_style.constant_style.capitalization = pascal_case

# Static fields are camelCase and start with s_
dotnet_naming_rule.static_fields_should_be_camel_case.severity = suggestion
dotnet_naming_rule.static_fields_should_be_camel_case.symbols = static_fields
dotnet_naming_rule.static_fields_should_be_camel_case.style = static_field_style

dotnet_naming_symbols.static_fields.applicable_kinds = field
dotnet_naming_symbols.static_fields.required_modifiers = static

dotnet_naming_style.static_field_style.capitalization = camel_case
dotnet_naming_style.static_field_style.required_prefix = s_

# Instance fields are camelCase and start with _
dotnet_naming_rule.instance_fields_should_be_camel_case.severity = suggestion
dotnet_naming_rule.instance_fields_should_be_camel_case.symbols = instance_fields
dotnet_naming_rule.instance_fields_should_be_camel_case.style = instance_field_style

dotnet_naming_symbols.instance_fields.applicable_kinds = field

dotnet_naming_style.instance_field_style.capitalization = camel_case
dotnet_naming_style.instance_field_style.required_prefix = _

# Locals and parameters are camelCase
dotnet_naming_rule.locals_should_be_camel_case.severity = suggestion
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style

dotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local
dotnet_naming_style.camel_case_style.capitalization = camel_case

# Local functions are PascalCase
dotnet_naming_rule.local_functions_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style = local_function_style

dotnet_naming_symbols.local_functions.applicable_kinds = local_function
dotnet_naming_style.local_function_style.capitalization = pascal_case

# Type Parameters
dotnet_naming_style.type_parameter_style.capitalization = pascal_case
dotnet_naming_style.type_parameter_style.required_prefix = T

dotnet_naming_rule.type_parameter_naming.symbols = type_parameter_symbol
dotnet_naming_rule.type_parameter_naming.style = type_parameter_style
dotnet_naming_rule.type_parameter_naming.severity = warning
dotnet_naming_symbols.type_parameter_symbol.applicable_kinds = type_parameter
dotnet_naming_symbols.type_parameter_symbol.applicable_accessibilities = *

# By default, name items with PascalCase
dotnet_naming_rule.members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.members_should_be_pascal_case.symbols = all_members
dotnet_naming_rule.members_should_be_pascal_case.style = pascal_case_style

dotnet_naming_symbols.all_members.applicable_kinds = *

dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# IDE0005: Using directive is unnecessary
dotnet_diagnostic.IDE0005.severity = warning

# MA0049: Type name should not match containing namespace
dotnet_diagnostic.MA0049.severity = suggestion

# MA0076: Do not use implicit culture-sensitive ToString in interpolated strings
dotnet_diagnostic.MA0076.severity = silent

# SA0001: XML comment analysis is disabled due to project configuration
dotnet_diagnostic.SA0001.severity = none

# SA1101: Prefix local calls with this
dotnet_diagnostic.SA1101.severity = none

# SA1200: Using directives should be placed correctly
dotnet_diagnostic.SA1200.severity = none

# SA1308: Variable names should not be prefixed
dotnet_diagnostic.SA1308.severity = silent

# SA1309: Field names should not begin with underscore
dotnet_diagnostic.SA1309.severity = none

# SA1311: Static readonly fields should begin with upper-case letter
dotnet_diagnostic.SA1311.severity = none

# SA1503: Braces should not be omitted
dotnet_diagnostic.SA1503.severity = none

# SA1600: Elements should be documented
dotnet_diagnostic.SA1600.severity = none

# SA1633: File should have header
dotnet_diagnostic.SA1633.severity = none
